name: 发布到 npm
on:
  push:
    branches: '*'
    paths:
      - 'packages/**' # 检测任意文件变化，
      - 'package.json' # 全局的依赖信息

  workflow_dispatch: # 手动触发
    inputs:
      ref:
        description: '发布的分支（选填）'
        required: false
        default: ''
        type: string
      package:
        description: '要发布的包'
        required: true
        type: choice
        options:
          - core
          - dev-log
          - check-version
          - copy-text
          - rollup-external
          - all
        default: 'all'

jobs:
  pub:
    # 在提交的代码包含 `version` 字样时才运行该动作
    # 或者手动触发
    name: |
      发布到 npm
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: write
      id-token: write
    # 复合条件判断（自动触发检查提交信息，手动触发直接放行）
    # startsWith(github.event.head_commit.message, 'version')
    # contains(github.event.inputs.version, '手动触发')
    # endsWith(github.event.head_commit.message, 'version')
    if: |
      (github.event_name == 'push' && startsWith(github.event.head_commit.message, 'version')) ||
      github.event_name == 'workflow_dispatch'

    steps:
      - name: 代码检出
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.ref || github.ref_name }}
          fetch-depth: 0

      - name: 初始化 Node 并设定 Node 版本
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
          registry-url: https://registry.npmjs.org
          # cache: 'pnpm' # 该行添加后触发了 github action 的发布错误

      - name: pnpm 安装
        uses: pnpm/action-setup@v2
        with:
          version: 10
          run_install: false

      - name: 缓存 pnpm
        id: pnpm-store
        run: echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Cache pnpm store
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-store.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: 安装全局依赖
        run: |
          # npm ci # npm 安装依赖
          pnpm install --frozen-lockfile --prod=false
          cd scripts
          chmod +x detect_changes.sh workflow_dispatch.sh pub.sh
          # chmod +x scripts/detect_changes.sh
          # chmod +x scripts/workflow_dispatch.sh
          #chmod +x scripts/detect_changes.sh

      - name: 检测子包变更情况（推送代码时触发）
        if: github.event_name == 'push'
        id: detect-changes
        run: |
          # ls -al packages/dev-log/src/dev
          ./scripts/detect_changes.sh

      - name: 检测子包变更情况（手动触发时触发）
        if: github.event_name == 'workflow_dispatch'
        id: workflow-changes
        env:
          INPUT_PACKAGE: ${{ github.event.inputs.package }}
        run: |
          ./scripts/workflow_dispatch.sh

      - name: 设置工作根路径
        run: |
          echo "REPO_ROOT=$(pwd)" >> $GITHUB_ENV

      - name: 发布到 npm
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          UPDATE_PACKAGES: ${{ env.update_packages }}
          REPO_ROOT: ${{ env.REPO_ROOT }}
        run: |
          ./scripts/pub.sh
